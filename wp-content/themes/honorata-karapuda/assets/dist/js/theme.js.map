{"version":3,"sources":["theme.js"],"names":["document","addEventListener","initializeMasonry","gridElement","querySelector","viewportWidth","window","innerWidth","columnCount","columnWidth","concat","querySelectorAll","forEach","item","style","width","masonry","Masonry","itemSelector","gutter","percentPosition","imagesLoaded","layout","on","gsap","to","opacity","visibility","duration","fromTo","y","stagger","registerPlugin","ScrollTrigger","ScrollToPlugin","destroy","e","blob","x","clientX","clientWidth","clientY","clientHeight","transform"],"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAK5C,SAASC,IACP,IAAMC,EAAcH,SAASI,cAAc,SACrCC,EAAgBC,OAAOC,WAEzBC,EAAc,EAaZC,EAAW,gBAAAC,OAAuC,KAXtDF,EADEH,GAAiB,IACL,EACLA,GAAiB,IACZ,EACLA,GAAiB,KACZ,EACLA,GAAiB,KACZ,EAEA,GAGmC,GAAO,UAAAK,OAASF,EAAW,KAC9ER,SAASW,iBAAiB,2BAA2BC,SAAQ,SAAAC,GAC3DA,EAAKC,MAAMC,MAAQN,CACrB,IAEA,IAAMO,EAAU,IAAIC,QAAQd,EAAa,CACvCe,aAAc,aACdT,YAAa,cACbU,OAAQ,GACRC,iBAAiB,IAoBnB,OAjBAC,aAAa,SAAS,WACpBL,EAAQM,QACV,IAEAN,EAAQO,GAAG,kBAAkB,WAE3BC,KAAKC,GAAG,QAAS,CAAEC,QAAS,EAAGC,WAAY,UAAWC,SAAU,KAChEJ,KAAKC,GAAG,eAAgB,CAAEC,QAAS,EAAGC,WAAY,UAAWC,SAAU,KAGvEJ,KAAKK,OACH,aACA,CAAEH,QAAS,EAAGI,EAAG,IACjB,CAAEJ,QAAS,EAAGI,EAAG,EAAGC,QAAS,GAAKH,SAAU,IAEhD,IAEOZ,CACT,CAnDAQ,KAAKQ,eAAeC,eACpBT,KAAKQ,eAAeE,gBAoDpB,IAAIlB,EAAUd,IAEdI,OAAOL,iBAAiB,UAAU,WAC5Be,GACFA,EAAQmB,UAEVnB,EAAUd,GACZ,IAEAF,SAASC,iBAAiB,aAAa,SAAUmC,GAC/C,IAAIC,EAAOrC,SAASI,cAAc,SAC9BkC,EAAIF,EAAEG,QAAUF,EAAKG,YAAc,EACnCV,EAAIM,EAAEK,QAAUJ,EAAKK,aAAe,EACxCL,EAAKvB,MAAM6B,UAAS,eAAAjC,OAAkB4B,EAAC,QAAA5B,OAAOoB,EAAC,SACjD,GACF","file":"theme.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  gsap.registerPlugin(ScrollTrigger);\n  gsap.registerPlugin(ScrollToPlugin);\n\n  // Function to initialize Masonry with dynamic column width\n  function initializeMasonry() {\n    const gridElement = document.querySelector('.grid');\n    const viewportWidth = window.innerWidth;\n\n    let columnCount = 5;\n    if (viewportWidth <= 500) {\n      columnCount = 1;\n    } else if (viewportWidth <= 768) {\n      columnCount = 2;\n    } else if (viewportWidth <= 1024) {\n      columnCount = 3;\n    } else if (viewportWidth <= 1500) {\n      columnCount = 4;\n    } else {\n      columnCount = 5;\n    }\n\n    const columnWidth = `calc((100% - ${(columnCount - 1) * 40}px) / ${columnCount})`;\n    document.querySelectorAll('.grid-sizer, .grid-item').forEach(item => {\n      item.style.width = columnWidth;\n    });\n\n    const masonry = new Masonry(gridElement, {\n      itemSelector: '.grid-item',\n      columnWidth: '.grid-sizer',\n      gutter: 40,\n      percentPosition: true,\n    });\n\n    imagesLoaded('.grid', function () {\n      masonry.layout();\n    });\n\n    masonry.on('layoutComplete', function () {\n      // Show the grid after layout is complete\n      gsap.to('.grid', { opacity: 1, visibility: 'visible', duration: 0.5 });\n      gsap.to('.page-footer', { opacity: 1, visibility: 'visible', duration: 0.5 });\n\n      // Animate items\n      gsap.fromTo(\n        '.grid-item',\n        { opacity: 0, y: 50 },\n        { opacity: 1, y: 0, stagger: 0.2, duration: 0.5 }\n      );\n    });\n\n    return masonry;\n  }\n\n  let masonry = initializeMasonry();\n\n  window.addEventListener('resize', function () {\n    if (masonry) {\n      masonry.destroy();\n    }\n    masonry = initializeMasonry();\n  });\n\n  document.addEventListener('mousemove', function (e) {\n    var blob = document.querySelector('.blob');\n    var x = e.clientX - blob.clientWidth / 2;\n    var y = e.clientY - blob.clientHeight / 2;\n    blob.style.transform = `translate3d(${x}px, ${y}px, 0)`;\n  });\n});\n"]}